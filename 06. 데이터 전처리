1. dplyr 패키지란?
데이터 가공(전처리, 필터링, 요약 등)을 쉽고 직관적으로 수행할 수 있도록 도와주는 R의 대표적인 패키지
파이프 연산자 (%>%)와 함께 쓰며, 데이터 처리 흐름을 명확하게 보여주는 것이 장점

- 주요 함수 요약
| 함수          | 기능            
| ------------- | ------------- 
| `filter()`    | 행 추출 (조건 필터링) 
| `select()`    | 열 선택          
| `arrange()`   | 정렬            
| `mutate()`    | 파생 변수 생성      
| `summarise()` | 요약 통계 계산      
| `group_by()`  | 그룹별 연산        
| `left_join()` | 데이터 병합(가로 방향) 
| `bind_rows()` | 데이터 결합(세로 방향) 


2. 조건에 맞는 행 추출 filter()
exam %>% filter(class == 1)                       # class가 1인 행
exam %>% filter(class != 1)                       # class가 1이 아닌 행
exam %>% filter(class == 1 & math >= 50)          # AND 조건
exam %>% filter(math >= 90 | english >= 90)       # OR 조건
exam %>% filter(class %in% c(1, 3, 5))            # 여러 조건 축약


3. 자주 쓰는 연산자
논리 연산자: <, <=, >, >=, ==, !=, |, &, %in%
산술 연산자: +, -, *, /, ^, **, %/%(몫), %%(나머지)


4. 변수(열) 선택 select()
exam %>% select(math)                             # math 변수만 선택
exam %>% select(class, math, english)             # 여러 변수 선택
exam %>% select(-math)                            # math 제외

- filter와 조합
exam %>%
  filter(class == 1) %>%
  select(english)

- head와 조합
exam %>%
  select(id, math) %>%
  head()


5. 정렬하기 arrange()
exam %>% arrange(math)              # math 오름차순
exam %>% arrange(desc(math))        # math 내림차순
exam %>% arrange(class, math)       # class → math 순으로 정렬


6. 파생변수 만들기 mutate()
exam %>%
  mutate(total = math + english + science) %>%
  head()

- 여러 파생변수 생성
exam %>%
  mutate(
    total = math + english + science,
    mean = (math + english + science) / 3) %>%
  head()

- 조건에 따라 파생변수 만들기
exam %>%
  mutate(test = ifelse(science >= 60, "pass", "fail")) %>%
  head()

- 파생변수 → 정렬
exam %>%
  mutate(total = math + english + science) %>%
  arrange(total) %>%
  head()


7. 그룹별 요약 group_by() + summarise()
- 전체 평균
exam %>% summarise(mean_math = mean(math))

- class별 수학 평균
exam %>%
  group_by(class) %>%
  summarise(mean_math = mean(math))

- 다양한 통계량 계산
exam %>%
  group_by(class) %>%
  summarise(
    mean_math = mean(math),
    sum_math = sum(math),
    median_math = median(math),
    n = n())

- 제조사(manufacturer)와 구동방식(drv)별 도시연비 평균
mpg %>%
  group_by(manufacturer, drv) %>%
  summarise(mean_cty = mean(cty)) %>%
  head(10)


8. 데이터 합치기
- 가로 방향 병합 
total <- left_join(test1, test2, by = "id")

- 세로 방향 결합
group_all <- bind_rows(group_a, group_b)

- 전체 예제 흐름 (요약)
library(dplyr)

# 조건 추출 → 열 선택 → 파생변수 → 그룹 요약까지 연계 가능
exam %>%
  filter(class %in% c(1, 3)) %>%
  select(math, english, science) %>%
  mutate(total = math + english + science) %>%
  arrange(desc(total)) %>%
  head()
